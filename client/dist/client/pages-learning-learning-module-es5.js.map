{"version":3,"sources":["webpack:///src/app/models/content_model.ts","webpack:///src/app/models/courses_model.ts","webpack:///src/app/models/module_model.ts","webpack:///src/app/models/pdfs_model.ts","webpack:///src/app/models/quiz_model.ts","webpack:///src/app/models/users_model.ts","webpack:///src/app/models/videos_model.ts","webpack:///src/app/pages/learning/add-content/add-content.component.ts","webpack:///src/app/pages/learning/add-content/add-content.component.html","webpack:///src/app/pages/learning/add-course/add-course.component.ts","webpack:///src/app/pages/learning/add-course/add-course.component.html","webpack:///src/app/pages/learning/add-module/add-module.component.ts","webpack:///src/app/pages/learning/add-module/add-module.component.html","webpack:///src/app/pages/learning/add-pdf/add-pdf.component.ts","webpack:///src/app/pages/learning/add-pdf/add-pdf.component.html","webpack:///src/app/pages/learning/add-quiz/add-quiz.component.ts","webpack:///src/app/pages/learning/add-quiz/add-quiz.component.html","webpack:///src/app/pages/learning/add-video/add-video.component.ts","webpack:///src/app/pages/learning/add-video/add-video.component.html","webpack:///src/app/pages/learning/content-learning/content-learning.component.ts","webpack:///src/app/pages/learning/content-learning/content-learning.component.html","webpack:///src/app/pages/learning/learning-home/learning-home.component.ts","webpack:///src/app/pages/learning/learning-home/learning-home.component.html","webpack:///src/app/pages/learning/learning-routing.module.ts","webpack:///src/app/pages/learning/learning.component.ts","webpack:///src/app/pages/learning/learning.component.html","webpack:///src/app/pages/learning/learning.filter.pipe.ts","webpack:///src/app/pages/learning/learning.module.ts","webpack:///src/app/pages/learning/modules-learning/modules-learning.component.ts","webpack:///src/app/pages/learning/modules-learning/modules-learning.component.html","webpack:///src/app/pages/learning/pdf-learning/pdf-learning.component.ts","webpack:///src/app/pages/learning/pdf-learning/pdf-learning.component.html","webpack:///src/app/pages/learning/quiz/quiz.component.ts","webpack:///src/app/pages/learning/quiz/quiz.component.html","webpack:///src/app/pages/learning/signin/signin.component.ts","webpack:///src/app/pages/learning/signin/signin.component.html","webpack:///src/app/pages/learning/videos-learning/videos-learning.component.ts","webpack:///src/app/pages/learning/videos-learning/videos-learning.component.html","webpack:///src/app/pages/learning/viewpdf/viewpdf.component.ts","webpack:///src/app/pages/learning/viewpdf/viewpdf.component.html","webpack:///src/app/pages/learning/viewvideo/viewvideo.component.ts","webpack:///src/app/pages/learning/viewvideo/viewvideo.component.html","webpack:///src/app/services/content.services.ts","webpack:///src/app/services/courses.services.ts","webpack:///src/app/services/modules.services.ts","webpack:///src/app/services/pdfs.services.ts","webpack:///src/app/services/quiz.services.ts","webpack:///src/app/services/video.services.ts"],"names":["Content","_id","course","module","number","namecontent","link","files","Courses","course_name","duration","instructor","modules","image","Modules","module_name","module_duration","PDFS","namePDF","content","Quiz","nameQuiz","Users","name","fathersurname","mothersurname","role","creditcard","nip","email","password","expiration_date","Videos","nameVideo","AddContentComponent","moduleservices","usersservices","contentservices","route","router","identity","getIdentity","token","getToken","url","ngOnInit","once","onSubmit","f","params","forEach","moduleId","courseId","addNewContent","subscribe","response","INFO_CONTENT","alert","alertMessage","filesToUpload","makeFileRequest","then","result","error","console","log","fileChangeEvent","fileInput","target","Promise","resolve","reject","formData","FormData","xhr","XMLHttpRequest","i","length","append","onreadystatechange","readyState","status","JSON","parse","open","setRequestHeader","send","selector","templateUrl","styleUrls","providers","AddCourseComponent","coursesservices","courses","addNewCourse","INFO_COURSE","AddModuleComponent","addNewModule","INFO_MODULE","AddPdfComponent","pdfservices","pdfs","contentId","addNewFile","INFO_PDF","AddQuizComponent","quizservices","quiz","addNewQuiz","INFO_QUIZ","AddVideoComponent","videosservices","videos","addNewVideo","INFO_VIDEO","ContentLearningComponent","getContent","id","getModule","getContents","onCancelModule","confirm","document","querySelector","scrollIntoView","behavior","onDeleteConfirm","onDeleteContent","deleteModule","navigate","onUpdateConfirm","update","onUpdateCancel","onUpdateContent","updateModule","LearningHomeComponent","next_page","prev_page","getCourses","page","routes","path","component","LearningRoutingModule","forChild","imports","exports","LearningComponent","Title","setTitle","users","loginAccount","INFO_ACCOUNT","localStorage","setItem","stringify","location","reload","errorMessage","message","CoursesFilterPipe","transform","searchTerm","filter","toLowerCase","indexOf","LearningModule","declarations","ModulesLearningComponent","getCourse","getModules","onCancelCourse","onDeleteCourse","deleteCourse","courseRemoved","onUpdateCourse","updateCourse","PdfLearningComponent","pdfsservices","getPDFS","getFiles","pdf","QuizComponent","getQuizzes","quizzes","SigninComponent","usersServices","termsAccepted","newAccount","VideosLearningComponent","getVideos","video","ViewpdfComponent","sanitizer","downloadPDF","getFile","ViewvideoComponent","getVideoAlone","ContentServices","http","json","headers","post","get","updateContent","put","deleteContent","providedIn","CoursesServices","ModuleServices","PdfsServices","pdfFile","getAloneFile","updateFiles","QuizServices","updateQuiz","VideosServices","getVideo","updateVideos","videoFile"],"mappings":"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","file":"pages-learning-learning-module-es5.js","sourcesContent":["export class Content {\r\n    constructor(\r\n        public _id: string,\r\n        public course: string,\r\n        public module: string,\r\n        public number: string,\r\n        public namecontent: string,\r\n        public link: string,\r\n        public files: string\r\n    ) {}\r\n}","export class Courses {\r\n    constructor(\r\n        public _id: string,\r\n        public course_name: string,\r\n        public duration: string,\r\n        public instructor: string,\r\n        public modules: string,\r\n        public image: string\r\n    ) {}\r\n}","export class Modules {\r\n    constructor(\r\n        public _id: string,\r\n        public course: string,\r\n        public module_name: string,\r\n        public module_duration: string,\r\n        public image: string\r\n    ) {}\r\n}","export class PDFS {\r\n    constructor(\r\n        public _id: string,\r\n        public namePDF: string,\r\n        public files: string,\r\n        public number: string,\r\n        public content: string\r\n    ){}\r\n}","export class Quiz {\r\n    constructor(\r\n        public nameQuiz: string,\r\n        public content: string,\r\n        public number: string,\r\n        public link: string\r\n    ){}\r\n}","export class Users {\r\n    constructor(\r\n        public _id: string,\r\n        public name: string,\r\n        public fathersurname: string,\r\n        public mothersurname: string,\r\n        public role: string,\r\n        public creditcard: string,\r\n        public nip: string,\r\n        public email: string,\r\n        public password: string,\r\n        public expiration_date: string\r\n    ){}\r\n}","export class Videos {\r\n    constructor(\r\n        public _id: string,\r\n        public nameVideo: string,\r\n        public files: string,\r\n        public number: string,\r\n        public content: string\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { ModuleServices } from '../../../services/modules.services';\r\nimport { Modules } from 'src/app/models/module_model';\r\nimport { Content } from 'src/app/models/content_model';\r\n\r\n@Component({\r\n  selector: 'app-add-content',\r\n  templateUrl: './add-content.component.html',\r\n  styleUrls: ['./add-content.component.scss'],\r\n  providers: [ UsersServices, ContentServices, ModuleServices]\r\n})\r\nexport class AddContentComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public modules: Modules;\r\n  public content: Content;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private moduleservices: ModuleServices,\r\n    private usersservices:UsersServices,\r\n    private contentservices: ContentServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { \r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.content = new Content ('','','','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   })\r\n  }\r\n\r\n  public onSubmit(f: NgForm) {\r\n    this.route.params.forEach((params: Params) => {\r\n\r\n      let moduleId = params['id'];\r\n      let courseId = params['ids'];\r\n\r\n      this.content.course = courseId;\r\n      this.content.module = moduleId;\r\n\r\n      this.contentservices.addNewContent(this.token, this.content).subscribe(\r\n        response => {\r\n          if(!response.INFO_CONTENT) {\r\n            alert(\"Se encontraron problemas en el servidor.\");\r\n            this.alertMessage = 'Se encontraron problemas en el servidor.';\r\n          } else {\r\n            if(!this.filesToUpload) {\r\n              this.alertMessage = 'Se añadió el módulo, pero no se adjuntó imagen.';\r\n            } else {\r\n              this.makeFileRequest(this.url + '/upload-file/' + response.INFO_CONTENT._id, [] , this.filesToUpload).then(\r\n                (result:any) => {\r\n                  this.content.files = result.files;\r\n                  this.alertMessage = \"El contenido se creó con éxito.\";\r\n                  this.content = response.INFO_CONTENT;\r\n                }\r\n              );\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n    })\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('files', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo contenido</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el curso con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"col-12 col-sm-8 col-md-6 col-lg-5 d-block m-auto\">\r\n                <div>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/id.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"course\"\r\n                            id=\"course\"\r\n                            placeholder=\"Ingresa el ID de la URL despues de COURSE\"\r\n                            class=\"form-control id_course\"\r\n                            #course=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"content.course\"\r\n                            [class.is-invalid]=\"course.touched && course.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"course.errors?.required && course.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/id.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"module\"\r\n                            id=\"module\"\r\n                            placeholder=\"Ingresa el ID de la URL despues de CONTENT\"\r\n                            class=\"form-control module\"\r\n                            #module=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"content.module\"\r\n                            [class.is-invalid]=\"module.touched && module.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"module.errors?.required && module.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/number.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"number\"\r\n                            id=\"number\"\r\n                            placeholder=\"Ingresa el número de contenido\"\r\n                            class=\"form-control number\"\r\n                            #number=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"content.number\"\r\n                            [class.is-invalid]=\"number.touched && number.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"number.errors?.required && number.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/name.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"namecontent\"\r\n                            id=\"namecontent\"\r\n                            placeholder=\"Ingresa el nombre del contenido (PDF's, Videos, Examenes)\"\r\n                            class=\"form-control namecontent\"\r\n                            #namecontent=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"content.namecontent\"\r\n                            [class.is-invalid]=\"namecontent.touched && namecontent.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"namecontent.errors?.required && namecontent.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/link.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"link\"\r\n                            id=\"link\"\r\n                            placeholder=\"Ingresa el link de este: (pdfs, videos, examenes)\"\r\n                            class=\"form-control link\"\r\n                            #link=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"content.link\"\r\n                            [class.is-invalid]=\"link.touched && link.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"link.errors?.required && link.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/image.svg\" alt=\"Icon\" width=\"30px\" />                      \r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            id=\"image\"\r\n                            placeholder=\"Imagen del curso\"\r\n                            class=\"form-control image\"\r\n                            (change)=\"fileChangeEvent($event);\"\r\n                        />\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir contenido\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-50 d-block m-auto text-center\">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!identity\">\r\n    <app-learning-home></app-learning-home>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { CoursesServices } from '../../../services/courses.services';\r\nimport { Courses } from 'src/app/models/courses_model';\r\n\r\n@Component({\r\n  selector: 'app-add-course',\r\n  templateUrl: './add-course.component.html',\r\n  styleUrls: ['./add-course.component.scss'],\r\n  providers: [ UsersServices, CoursesServices]\r\n})\r\nexport class AddCourseComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public courses: Courses\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private coursesservices: CoursesServices,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.courses = new Courses ('','','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   })\r\n  }\r\n\r\n  public onSubmit(f:NgForm) {\r\n    this.coursesservices.addNewCourse(this.token, this.courses).subscribe(\r\n      response => {\r\n        if(!response.INFO_COURSE) {\r\n          this.alertMessage = 'Se encontraron problemas en el servidor.'\r\n        } else {\r\n          if(!this.filesToUpload) {\r\n            this.alertMessage = 'Se añadió el curso, pero no se adjuntó imagen.';\r\n          } else {\r\n            this.makeFileRequest(this.url + '/add-image-course/' + response.INFO_COURSE._id, [] , this.filesToUpload).then(\r\n              (result: any) => {\r\n                this.courses.image = result.image;\r\n                this.alertMessage = 'El curso se creó con éxito.'\r\n                this.courses = response.INFO_COURSE;\r\n              }\r\n            );\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('image', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo curso</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el curso con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"col-12 col-sm-8 col-md-5 d-block m-auto\">\r\n                <div>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/course.svg\" alt=\"Icon\" width=\"30px\" />\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"course_name\" \r\n                            id=\"course_name\"\r\n                            placeholder=\"Nombre del curso\"\r\n                            class=\"form-control course_name\"\r\n                            #course_name=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"courses.course_name\"\r\n                            [class.is-invalid]=\"course_name.touched && course_name.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"course_name.errors?.required && course_name.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/timesheet.svg\" alt=\"Icon\" width=\"30px\" />\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"duration\"\r\n                            id=\"duration\"\r\n                            placeholder=\"Duración total del curso\"\r\n                            class=\"form-control duration\"\r\n                            #duration=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"courses.duration\"\r\n                            [class.is-invalid]=\"duration.touched && duration.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"duration.errors?.required && duration.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/Male Female User Group.svg\" alt=\"Icon\" width=\"30px\" />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"instructor\"\r\n                            id=\"instructor\"\r\n                            placeholder=\"Nombre del instructor\"\r\n                            class=\"form-control instructor\"\r\n                            #instructor = \"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"courses.instructor\"\r\n                            [class.is-invalid]=\"instructor.touched && instructor.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"instructor.errors?.required && instructor.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/module.svg\" alt=\"Icon\" width=\"30px\" />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"modules\"\r\n                            id=\"modules\"\r\n                            placeholder=\"Número total de módulos\"\r\n                            class=\"form-control modules\"\r\n                            #modules = \"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"courses.modules\"\r\n                            [class.is-invalid]=\"modules.touched && modules.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"modules.errors?.required && modules.touched\">!</span>\r\n                    </p>\r\n\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/image.svg\" alt=\"Icon\" width=\"30px\" />                      \r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            id=\"image\"\r\n                            placeholder=\"Imagen del curso\"\r\n                            class=\"form-control image\"\r\n                            (change)=\"fileChangeEvent($event);\"\r\n                        />\r\n                    </p>\r\n\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir curso\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-75 d-block m-auto text-center \">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <app-learning></app-learning>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { ModuleServices } from '../../../services/modules.services';\r\nimport { CoursesServices } from '../../../services/courses.services';\r\nimport { Modules } from 'src/app/models/module_model';\r\nimport { Courses } from 'src/app/models/courses_model';\r\n\r\n@Component({\r\n  selector: 'app-add-module',\r\n  templateUrl: './add-module.component.html',\r\n  styleUrls: ['./add-module.component.scss'],\r\n  providers: [ UsersServices, ModuleServices, CoursesServices ]\r\n})\r\nexport class AddModuleComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public modules: Modules;\r\n  public courses: Courses;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private moduleservices: ModuleServices,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.modules = new Modules ('','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   })\r\n  }\r\n\r\n  public onSubmit(f:NgForm) {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let courseId = params['id'];\r\n      this.modules.course = courseId;\r\n\r\n      this.moduleservices.addNewModule(this.token, this.modules).subscribe(\r\n        response => {\r\n          if(!response.INFO_MODULE) {\r\n            this.alertMessage = 'Se encontraron problemas en el servidor.'\r\n          } else {\r\n            if(!this.filesToUpload) {\r\n              this.alertMessage = 'Se añadió el módulo, pero no se adjuntó imagen.';\r\n            } else {\r\n              this.makeFileRequest(this.url + '/add-image-module/' + response.INFO_MODULE._id, [] , this.filesToUpload).then(\r\n              (result:any) => {\r\n                this.modules.image = result.image;\r\n                this.alertMessage = 'El módulo se creó con éxito.';\r\n                this.modules = response.INFO_MODULE \r\n              }\r\n              );\r\n            }\r\n          }\r\n        },\r\n        error =>{\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n\r\n    });\r\n  }\r\n\r\n  \r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('image', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo módulo</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el curso con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"col-12 col-sm-8 col-md-6 col-lg-4 d-block m-auto\">\r\n                <div>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/more_detailsForm.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"course\"\r\n                            id=\"course\"\r\n                            placeholder=\"Ingresa el ID de la URL\"\r\n                            class=\"form-control id_course\"\r\n                            #course=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"modules.course\"\r\n                            [class.is-invalid]=\"course.touched && course.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"course.errors?.required && course.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/module.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"module_name\"\r\n                            id=\"module_name\"\r\n                            placeholder=\"Nombre del módulo\"\r\n                            class=\"form-control module_name\"\r\n                            #module_name=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"modules.module_name\"\r\n                            [class.is-invalid]=\"module_name.touched && module_name.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"module_name.errors?.required && module_name.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col.12\">\r\n                        <img src=\"../../../../assets/svg/time.svg\" alt=\"\" width=\"30px\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"module_duration\"\r\n                            id=\"module_duration\"\r\n                            placeholder=\"Duración del módulo\"\r\n                            class=\"form-control module_duration\"\r\n                            #module_duration=\"ngModel\"\r\n                            required\r\n                            [(ngModel)]=\"modules.module_duration\"\r\n                            [class.is-invalid]=\"module_duration.touched && module_duration.invalid\"\r\n                        >\r\n                        <span class=\"text-danger\" *ngIf=\"module_duration.errors?.required && module_duration.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/image.svg\" alt=\"Icon\" width=\"30px\" />                      \r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            id=\"image\"\r\n                            placeholder=\"Imagen del curso\"\r\n                            class=\"form-control image\"\r\n                            (change)=\"fileChangeEvent($event);\"\r\n                        />\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir módulo\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-50 d-block m-auto text-center\">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <app-learning-home></app-learning-home>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { PdfsServices } from '../../../services/pdfs.services';\r\nimport { Content } from 'src/app/models/content_model';\r\nimport { PDFS } from 'src/app/models/pdfs_model';\r\n\r\n@Component({\r\n  selector: 'app-add-pdf',\r\n  templateUrl: './add-pdf.component.html',\r\n  styleUrls: ['./add-pdf.component.scss'],\r\n  providers: [ UsersServices, ContentServices, PdfsServices ]\r\n})\r\nexport class AddPdfComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public content: Content;\r\n  public pdfs: PDFS;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private contentservices: ContentServices,\r\n    private pdfservices: PdfsServices,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.pdfs = new PDFS ('','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true \r\n   });\r\n  }\r\n\r\n  public onSubmit(f: NgForm) {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let contentId = params['idPDF'];\r\n      this.pdfs.content = contentId;\r\n\r\n      this.pdfservices.addNewFile(this.token, this.pdfs).subscribe(\r\n        response => {\r\n          if(!response.INFO_PDF) {\r\n            this.alertMessage = 'Se encontraron problemas en el servidor.';\r\n          } else {\r\n            if(!this.filesToUpload) {\r\n              this.alertMessage = 'Se añadió el PDF, pero no se adjuntó archivo.';\r\n            } else {\r\n              this.makeFileRequest(this.url + '/upload-pdf/' + response.INFO_PDF._id, [] , this.filesToUpload).then(\r\n                (result:any) => {\r\n                  this.pdfs.files = result.files;\r\n                  this.alertMessage = 'El PDF se creó con éxito.';\r\n                  this.pdfs = response.INFO_PDF; \r\n                }\r\n              );\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n    });\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('files', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo video</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el PDF con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"col-12 col-sm-8 col-md-6 col-lg-4 d-block m-auto\">\r\n                <div>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/pdf_name.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"namePDF\"\r\n                        id=\"namePDF\"\r\n                        placeholder=\"Nombre del PDF\"\r\n                        class=\"form-control namePDF\"\r\n                        #namePDF=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"pdfs.namePDF\"\r\n                        [class.is-invalid]=\"namePDF.touched && namePDF.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"namePDF.errors?.required && namePDF.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/number.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        id=\"number\"\r\n                        placeholder=\"Número del PDF\"\r\n                        class=\"form-control number\"\r\n                        #number=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"pdfs.number\"\r\n                        [class.is-invalid]=\"number.touched && number.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"number.errors?.required && number.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/video_content.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        placeholder=\"ID del contenido\"\r\n                        class=\"form-control nameVideo\"\r\n                        #content=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"pdfs.content\"\r\n                        [class.is-invalid]=\"content.touched && content.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"content.errors?.required && content.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/pdf_files.svg\" alt=\"Icon\" width=\"30px\" />                      \r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"files\"\r\n                            id=\"files\"\r\n                            placeholder=\"PDF\"\r\n                            class=\"form-control image\"\r\n                            (change)=\"fileChangeEvent($event);\"\r\n                        />\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir PDF\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-50 d-block m-auto text-center\">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <app-learning-home></app-learning-home>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { QuizServices } from '../../../services/quiz.services';\r\nimport { Content } from 'src/app/models/content_model';\r\nimport { Quiz } from 'src/app/models/quiz_model';\r\n\r\n@Component({\r\n  selector: 'app-add-quiz',\r\n  templateUrl: './add-quiz.component.html',\r\n  styleUrls: ['./add-quiz.component.scss'],\r\n  providers: [ UsersServices, ContentServices, QuizServices ]\r\n})\r\n\r\nexport class AddQuizComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public content: Content;\r\n  public quiz: Quiz;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private contentservices: ContentServices,\r\n    private quizservices: QuizServices,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { \r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.quiz = new Quiz ('','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true\r\n    });\r\n  }\r\n\r\n  public onSubmit(f: NgForm) {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let contentId = params['idQuiz'];\r\n      this.quiz.content = contentId;\r\n\r\n      this.quizservices.addNewQuiz(this.token, this.quiz).subscribe(\r\n        response => {\r\n          if(!response.INFO_QUIZ) {\r\n            this.alertMessage = 'Se encontraron problemas en el servidor.';\r\n          } else {\r\n            this.alertMessage = 'El examen se creó con éxito.';\r\n            this.quiz = response.INFO_QUIZ;\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo examen</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el PDF con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" class=\"col-12 col-sm-8 col-md-6 col-lg-4 d-block m-auto\">\r\n                <div>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/number.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        id=\"number\"\r\n                        placeholder=\"Número del examen\"\r\n                        class=\"form-control number\"\r\n                        #number=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"quiz.number\"\r\n                        [class.is-invalid]=\"number.touched && number.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"number.errors?.required && number.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/exam.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"nameQuiz\"\r\n                        id=\"nameQuiz\"\r\n                        placeholder=\"Nombre del examen\"\r\n                        class=\"form-control nameQuiz\"\r\n                        #nameQuiz=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"quiz.nameQuiz\"\r\n                        [class.is-invalid]=\"nameQuiz.touched && nameQuiz.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"nameQuiz.errors?.required && nameQuiz.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/video_content.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        placeholder=\"ID Contenido\"\r\n                        class=\"form-control content\"\r\n                        #content=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"quiz.content\"\r\n                        [class.is-invalid]=\"content.touched && content.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"content.errors?.required && content.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/link.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"link\"\r\n                        id=\"link\"\r\n                        placeholder=\"Link\"\r\n                        class=\"form-control link\"\r\n                        #link=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"quiz.link\"\r\n                        [class.is-invalid]=\"link.touched && link.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"link.errors?.required && link.touched\">!</span>\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir examen\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-50 d-block m-auto text-center\">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport * as AOS from '../../../../../node_modules/aos/dist/aos.js';\r\n\r\nimport { GLOBAL } from \"../../../services/GLOBAL\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { VideosServices } from '../../../services/video.services';\r\nimport { Content } from 'src/app/models/content_model';\r\nimport { Videos } from 'src/app/models/videos_model';\r\n\r\n@Component({\r\n  selector: 'app-add-video',\r\n  templateUrl: './add-video.component.html',\r\n  styleUrls: ['./add-video.component.scss'],\r\n  providers: [ UsersServices, ContentServices, VideosServices ]\r\n})\r\nexport class AddVideoComponent implements OnInit {\r\n\r\n  public url:string;\r\n  public content: Content;\r\n  public videos: Videos;\r\n  public identity;\r\n  public token;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private contentservices: ContentServices,\r\n    private videosservices: VideosServices,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { \r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.url = GLOBAL.url;\r\n    this.videos = new Videos ('','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true \r\n   });\r\n  }\r\n\r\n  public onSubmit(f:NgForm) {\r\n    this.route.params.forEach((params: Params) => {\r\n\r\n      let contentId = params['idVideo'];\r\n      this.videos.content = contentId;\r\n\r\n      this.videosservices.addNewVideo(this.token, this.videos).subscribe(\r\n        response => {\r\n          if(!response.INFO_VIDEO) {\r\n            this.alertMessage = 'Se encontraron problemas en el servidor.';\r\n          } else {\r\n            if(!this.filesToUpload) {\r\n              this.alertMessage = 'Se añadió el video, pero no se adjuntó archivo.';\r\n            } else {\r\n              this.makeFileRequest(this.url + '/upload-video/' + response.INFO_VIDEO._id, [] , this.filesToUpload).then(\r\n                (result:any) => {\r\n                  this.videos.files = result.files;\r\n                  this.alertMessage = 'El video se creó con éxito.';\r\n                  this.videos = response.INFO_VIDEO; \r\n                }\r\n              );\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n      \r\n    });\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('files', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection pt-3\">\r\n        <div class=\"text\">\r\n            <h2>Añadir un nuevo video</h2>\r\n            <p class=\"text-danger\">* Por favor complete todos los campos para crear el video con exito *</p>\r\n            <hr width=\"45%\">\r\n            <form class=\"col-12 col-sm-8 col-md-6 col-lg-4 d-block m-auto\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\r\n                <div>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/video.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"nameVideo\"\r\n                        id=\"nameVideo\"\r\n                        placeholder=\"Nombre del video\"\r\n                        class=\"form-control nameVideo\"\r\n                        #nameVideo=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"videos.nameVideo\"\r\n                        [class.is-invalid]=\"nameVideo.touched && nameVideo.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"nameVideo.errors?.required && nameVideo.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/number.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        id=\"number\"\r\n                        placeholder=\"Número de video\"\r\n                        class=\"form-control number\"\r\n                        #number=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"videos.number\"\r\n                        [class.is-invalid]=\"number.touched && number.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"number.errors?.required && number.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/video_content.svg\" alt=\"Icon\" width=\"30px\">\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        placeholder=\"ID del contenido\"\r\n                        class=\"form-control nameVideo\"\r\n                        #content=\"ngModel\"\r\n                        required\r\n                        [(ngModel)]=\"videos.content\"\r\n                        [class.is-invalid]=\"content.touched && content.invalid\"\r\n                    >\r\n                    <span class=\"text-danger\" *ngIf=\"content.errors?.required && content.touched\">!</span>\r\n                    </p>\r\n                    <p class=\"col-12\">\r\n                        <img src=\"../../../../assets/svg/video_video.svg\" alt=\"Icon\" width=\"30px\" />                      \r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"files\"\r\n                            id=\"files\"\r\n                            placeholder=\"Video\"\r\n                            class=\"form-control image\"\r\n                            (change)=\"fileChangeEvent($event);\"\r\n                        />\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid\">\r\n                        Añadir video\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"response\">\r\n            <h3>Respuesta del servidor</h3>\r\n            <div *ngIf=\"alertMessage\">\r\n                <div class=\"alert alert-primary w-50 d-block m-auto text-center\">\r\n                    {{alertMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <app-learning-home></app-learning-home>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { CoursesServices } from '../../../services/courses.services';\r\nimport { ModuleServices } from '../../../services/modules.services';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\n\r\nimport { Courses } from '../../../models/courses_model';\r\nimport { Modules } from '../../../models/module_model';\r\nimport { Content } from '../../../models/content_model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-content-learning',\r\n  templateUrl: './content-learning.component.html',\r\n  styleUrls: ['./content-learning.component.scss'],\r\n  providers: [ CoursesServices, ModuleServices, ContentServices, UsersServices]\r\n})\r\nexport class ContentLearningComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public course: Courses;\r\n  public module: Modules;\r\n  public content: Content[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private coursesservices: CoursesServices,\r\n    private moduleservices: ModuleServices,\r\n    private contentservices: ContentServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.module = new Modules('','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n      //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   });\r\n\r\n\r\n   this.getContent();\r\n\r\n  }\r\n\r\n  getContent() {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let id = params['id'];  \r\n\r\n      this.moduleservices.getModule(this.token, id).subscribe(\r\n        response => {\r\n          if(!response.module) {\r\n            console.log('Se encontraron problemas en el servidor.');\r\n          } else {\r\n            this.module = response.module;\r\n            this.contentservices.getContents(response.module._id).subscribe(\r\n              response => {\r\n                if(!response.content) {\r\n                  console.log('Se encontraron problemas en el servidor.');\r\n                } else {\r\n                  this.content = response.content;\r\n                  console.log(this.content);               \r\n                }\r\n              },\r\n              error => {\r\n                console.log(error);                \r\n              }\r\n            )\r\n\r\n\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n    });\r\n  }\r\n\r\n  public confirm;\r\n\r\n  onCancelModule() {\r\n    this.confirm = null;\r\n    document.querySelector(\".First\").scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  onDeleteConfirm(id) {\r\n    this.confirm = id;\r\n  }\r\n\r\n  \r\n  onDeleteContent(id) {\r\n    this.moduleservices.deleteModule(this.token, id).subscribe(\r\n      response => {\r\n        if(!response.module) {\r\n          alert(\"Se encontraron problemas en el servidor. \");\r\n        } else if(response.module) {\r\n          alert(\"El módulo se eliminó con éxito.\");\r\n          this.router.navigate(['/learning']);\r\n        } \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  public update;\r\n\r\n  onUpdateConfirm(id) {\r\n    this.update = id;\r\n  }\r\n\r\n  onUpdateCancel() {\r\n    this.update = null;\r\n    document.querySelector(\".First\").scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  onUpdateContent(id){\r\n    this.moduleservices.updateModule(this.token, id, this.module).subscribe(\r\n      response => {                          \r\n        if(!response.module) {\r\n          alert(\"Error en el servidor\");\r\n        } else {\r\n          if(!this.filesToUpload) {\r\n            this.module = response.module;\r\n            alert(\"El módulo se modificó con éxito, pero no se modificó la imagen.\");\r\n            this.router.navigate(['/learning']);\r\n          } else {\r\n            this.makeFileRequest(this.url + '/add-image-module/' + response.module._id, [], this.filesToUpload),\r\n            (result: any) => {              \r\n              this.module.image = result.image;\r\n              this.module = response.module;\r\n              alert(\"El módulo se modificó con éxito.\");\r\n              this.router.navigate(['/learning']);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n    console.log(this.filesToUpload);\r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('image', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n\r\n    <h2 data-aos=\"fade-down\" class=\"First\">¿A que contenido deseas acceder?</h2>\r\n\r\n    <div *ngIf=\"module\">\r\n        <div class=\"actions d-lg-flex justify-content-lg-start\" *ngIf=\"identity.role == 'ROLE_ADMIN'\" data-aos=\"fade-down\">\r\n            <a class=\"btn btn-edit waves-effect waves-ripple\" (click)=\"onUpdateConfirm(module._id)\">\r\n                <img src=\"../../../../assets/svg/edit.svg\" alt=\"Logo\" />\r\n                Editar módulo\r\n            </a>\r\n            <br class=\"visible-sm\">\r\n            <a class=\"btn btn-delete waves-effect waves-ripple\" (click)=\"onDeleteConfirm(module._id)\" data-aos=\"fade-down\">\r\n                <img src=\"../../../../assets/svg/trash.svg\" alt=\"Logo\" />\r\n                Eliminar módulo\r\n            </a>\r\n\r\n \r\n        </div>\r\n\r\n        <div class=\"secure\" *ngIf=\"confirm == module._id\">\r\n            <p>¿Estas seguro de eliminar este módulo?</p>\r\n            <div class=\"buttons d-lg-flex justify-content-lg-around\">\r\n                <a class=\"btn btn-cancel btn-primary waves-effect waves-ripple\" (click)=\"onCancelModule()\">\r\n                    No, cancelar esta acción\r\n                </a>\r\n                <br class=\"visible-sm\">\r\n                <a class=\"btn btn-deletes btn-danger waves-effect waves-ripple\" (click)=\"onDeleteContent(module._id)\">\r\n                    Sí, eliminar definitivamente\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n                            \r\n        <div class=\"secure-update\" *ngIf=\"update == module._id\">\r\n            <p class=\"text-center mt-3\">Modificar curso</p>\r\n            <form (ngSubmit)=\"onUpdateContent(module._id)\" #f=\"ngForm\" class=\"col-12 col-sm-9 col-md-7 col-lg-5 d-block m-auto\">\r\n                <p>\r\n                    <input type=\"text\" class=\"form-control\" name=\"course_name\" #course=\"ngModel\" [(ngModel)]=\"module.course\" id=\"\" value=\"{{module.course}}\">\r\n                </p>\r\n                <p>\r\n                    <input type=\"text\" class=\"form-control\" name=\"duration\" #module_duration=\"ngModel\" [(ngModel)]=\"module.module_duration\" value=\"{{module.module_duration}}\">\r\n                </p>\r\n                <p>\r\n                    <input type=\"text\" class=\"form-control\" name=\"instructor\" #module_name=\"ngModel\" [(ngModel)]=\"module.module_name\" value=\"{{module.module_name}}\">\r\n                </p>\r\n                <p>\r\n                    <input type=\"file\" class=\"form-control\" name=\"image\" id=\"\" (change)=\"fileChangeEvent($event)\">\r\n                </p>\r\n\r\n                <div class=\"actions mt-3 d-lg-flex justify-content-lg-around\">\r\n                    <button type=\"reset\" class=\"btn-danger btn waves-effect waves-ripple\" (click)=\"onUpdateCancel()\">Cancelar acción</button>\r\n                    <button type=\"submit\" class=\"btn-primary btn waves-effect waves-ripple\">Actualizar contenido</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"FirstSection\" *ngIf=\"content\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-around\">\r\n                <a\r\n                    [routerLink]=\"[content.link + '/' + content._id ]\"\r\n                    routerLinkActive=\"router-link-active\"\r\n                    *ngFor=\"let content of content\"\r\n                    class=\"p-5 mt-5 rounded text-none\"\r\n                    data-aos=\"fade-down\"\r\n                >\r\n                    <div class=\"image\">\r\n                        <img src=\"{{ url + '/get-files/' + content.files }}\" alt=\"Icon\" >\r\n                    </div>\r\n                    <div class=\"text\">\r\n                        <h4 class=\"number\">{{content.number}}</h4>\r\n                        <h4>{{content.namecontent}}</h4>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"identity.role == 'ROLE_ADMIN' && module\">\r\n    <a [routerLink]=\"['add-content/', module._id]\" routerLinkActive=\"router-link-active\"class=\"ThirdSection btn-adds\">\r\n        <div>\r\n            <img src=\"../../../../assets/svg/addE.svg\" alt=\"adds\">\r\n        </div>\r\n    </a>    \r\n</div>               \r\n<h2 data-aos=\"fade-down\" class=\"First\">EMPEZAR AHORA</h2>\r\n\r\n<div class=\"clearfix\"></div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { CoursesServices } from '../../../services/courses.services';\r\nimport { Courses } from \"../../../models/courses_model\";\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\n\r\n@Component({\r\n  selector: 'app-learning-home',\r\n  templateUrl: './learning-home.component.html',\r\n  styleUrls: ['./learning-home.component.scss'],\r\n  providers: [ UsersServices, CoursesServices ]\r\n})\r\nexport class LearningHomeComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public courses: Courses[];\r\n  public next_page;\r\n  public prev_page;\r\n  public searchTerm: string;\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private coursesservices: CoursesServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.next_page = 1;\r\n    this.prev_page = 1;  \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   })\r\n\r\n   this.getCourses();\r\n   \r\n  }\r\n\r\n\r\n  getCourses() {\r\n    this.route.params.forEach((params: Params) => {\r\n\r\n      let page = + params['page'];\r\n      if(!page){\r\n        page = 1;\r\n      } else {\r\n        \r\n        this.next_page = page + 1;\r\n        this.prev_page = page - 1;\r\n\r\n        if(this.prev_page == 0) {\r\n          this.prev_page = 1;\r\n        }\r\n      }\r\n\r\n      this.coursesservices.getCourses(page).subscribe(\r\n        response => {\r\n          if(response.page) {\r\n            this.router.navigate(['/']);\r\n          }\r\n          else {\r\n            this.courses = response.courses;\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection\">\r\n        <h2 data-aos=\"fade-down\">Descubre los secretos de la cocina mexicana con nuestros cursos</h2>\r\n        <div class=\"subnav\">\r\n            <div data-aos=\"fade-down\" class=\"search shadow-small col-10 col-sm-4 col-md-4 col-lg-3 col-xl-3\">\r\n                <img src=\"../../../../assets/svg/Search.svg\" alt=\"Search\" width=\"25px\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Nombre del curso\"\r\n                    name=\"search\"\r\n                    spellcheck=\"false\"\r\n                    [(ngModel)]=\"searchTerm\"\r\n                    class=\"search form-control\">\r\n            </div>\r\n            <div data-aos=\"fade-down\" class=\"order\">\r\n                Ordenados por: <strong>Agregados recientemente</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"TwoSection\">\r\n        <hr>\r\n        <p class=\"item-not-found\" *ngIf=\"!(courses | courseFilter:searchTerm)?.length\"><span><strong>No se han encontrado resultados.</strong></span><span class=\"info-item\">No podemos encontrar ningún curso que coincida con su búsqueda<br> o no hay ningún curso disponible ahora.</span> <span>\\(o_o)/</span> </p>\r\n        <div class=\"container\">\r\n            <div class=\"row d-flex justify-content-around\">\r\n                <a \r\n                [routerLink]=\"['course', courses._id]\" \r\n                routerLinkActive=\"router-link-active\"  \r\n                *ngFor=\"let courses of courses | courseFilter:searchTerm\" \r\n                class=\"rounded text-none p-3 mt-5\"\r\n                data-aos=\"fade-down\"\r\n                >\r\n                    <div class=\"image\">\r\n                        <img src=\"{{ url + '/get-image-course/' + courses.image }}\" alt=\"{{courses.image}}\" class=\"rounded\">\r\n                    </div>\r\n                    <div class=\"text\">\r\n                        <h3 class=\"instructor\">{{courses.instructor}}</h3>\r\n                        <h3 class=\"course_name\">{{courses.course_name}}</h3>\r\n                        <div class=\"info d-md-flex justify-content-md-around\">\r\n                            <div class=\"modules info-d\">\r\n                                <img src=\"../../../../assets/svg/module.svg\" alt=\"Module\">\r\n                                {{courses.modules}} Módulos\r\n                            </div>\r\n                            <div class=\"duration info-d\">\r\n                                <img src=\"../../../../assets/svg/future.svg\" alt=\"Future\">\r\n                                {{courses.duration}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"identity.role == 'ROLE_ADMIN'\" >\r\n        <a [routerLink]=\"['add-course']\" routerLinkActive=\"router-link-active\" class=\"ThirdSection btn-add\">\r\n            <div>\r\n                <img src=\"../../../../assets/svg/addE.svg\" alt=\"add\">\r\n            </div>\r\n        </a>    \r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"clearfix\"></div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddContentComponent } from './add-content/add-content.component';\r\nimport { AddCourseComponent } from './add-course/add-course.component';\r\nimport { AddModuleComponent } from './add-module/add-module.component';\r\nimport { AddPdfComponent } from './add-pdf/add-pdf.component';\r\nimport { AddQuizComponent } from './add-quiz/add-quiz.component';\r\nimport { AddVideoComponent } from './add-video/add-video.component';\r\nimport { ContentLearningComponent } from './content-learning/content-learning.component';\r\nimport { LearningHomeComponent } from './learning-home/learning-home.component';\r\nimport { LearningComponent } from './learning.component';\r\nimport { ModulesLearningComponent } from './modules-learning/modules-learning.component';\r\nimport { PdfLearningComponent } from './pdf-learning/pdf-learning.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { VideosLearningComponent } from './videos-learning/videos-learning.component';\r\nimport { ViewpdfComponent } from './viewpdf/viewpdf.component';\r\nimport { ViewvideoComponent } from './viewvideo/viewvideo.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LearningComponent },\r\n  { path: 'add-course', component: AddCourseComponent },\r\n  { path: 'add-content', component: AddContentComponent },\r\n  { path: 'home', component: LearningHomeComponent },\r\n  { path: 'sign-in', component: SigninComponent },\r\n  { path: 'add-course', component: AddCourseComponent },\r\n  { path: 'course/:id', component: ModulesLearningComponent }, \r\n  { path: 'course/:id/add-module/:course', component: AddModuleComponent }, \r\n  { path: 'course/:ids/content/:id/add-content/:module', component: AddContentComponent },\r\n  { path: 'course/:id/content/:id', component: ContentLearningComponent },\r\n  { path: 'course/:id/content/:id/pdfs/:ids', component: PdfLearningComponent },\r\n  { path: 'course/:id/content/:id/pdfs/:id/add-pdf/:idPDF', component: AddPdfComponent },\r\n  { path: 'course/:id/content/:id/pdfs/:id/view/:file', component: ViewpdfComponent },\r\n  { path: 'course/:id/content/:id/videos/:ids', component: VideosLearningComponent },\r\n  { path: 'course/:id/content/:id/videos/:id/view/:file', component: ViewvideoComponent},\r\n  { path: 'course/:id/content/:id/videos/:id/add-video/:idVideo', component: AddVideoComponent },\r\n  { path: 'course/:id/content/:id/quizzes/:ids', component: QuizComponent },\r\n  { path: 'course/:id/content/:id/quizzes/:id/add-quiz/:idQuiz', component: AddQuizComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LearningRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Users } from '../../models/users_model';\r\nimport { Response } from '@angular/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UsersServices } from '../../services/users.services';\r\n\r\n@Component({\r\n  selector: 'app-learning',\r\n  templateUrl: './learning.component.html',\r\n  styleUrls: ['./learning.component.scss'],\r\n  providers: [ UsersServices ]\r\n})\r\n\r\nexport class LearningComponent implements OnInit {\r\n\r\n  public identity;\r\n  public token;\r\n  public errorMessage;\r\n  public users: Users;\r\n\r\n  constructor(\r\n    private Title:Title,\r\n    private usersservices:UsersServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.Title.setTitle('Iniciar sesión - Centli');\r\n    this.users = new Users('','','','','ROLE_USER','','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n  }\r\n\r\n  public onSubmit(f: NgForm) {\r\n    \r\n    console.log(\"---> Realizando petición HTTP al servidor...\");\r\n\r\n    this.usersservices.loginAccount(this.users).subscribe(\r\n      response => {\r\n\r\n        console.log(\"THIS USERS\", this.users);\r\n        \r\n\r\n        let identity = response.INFO_ACCOUNT;\r\n        this.identity = identity;\r\n\r\n        console.log(\"---> Creando la identidad del usuario...\");\r\n\r\n        console.log(identity);\r\n        \r\n\r\n        if(!this.identity._id) {\r\n          alert(\"Se encontrarón problemas para generar la IDENTIDAD del usuario\");\r\n          console.log(\"---> Hubo un problema al generar la identidad del usuario.\");\r\n        } else {\r\n          localStorage.setItem('identity', JSON.stringify(identity));\r\n\r\n          this.usersservices.loginAccount(this.users, 'true').subscribe(\r\n            response => {\r\n\r\n              let token = response.token;\r\n              this.token = token;\r\n\r\n              \r\n              console.log(\"---> Token creado con exito.\");\r\n\r\n              if(this.token.length <= 0) {\r\n                alert(\"Se encontrarón problemas para generar el TOKEN del usuario\");\r\n                console.log(\"---> Hubo un problema al generar el token del usuario.\");\r\n              } else {\r\n                location.reload();\r\n                this.router.navigate(['/inicio']);\r\n                localStorage.setItem('token', token);\r\n              }\r\n\r\n            },\r\n            error => {\r\n\r\n              var errorMessage = <any>error;\r\n      \r\n              if(errorMessage != null) {\r\n                  this.errorMessage = error.error.message;\r\n                  console.log(error);\r\n              } \r\n            }\r\n          )\r\n\r\n        }\r\n        \r\n        \r\n      },\r\n      error => {\r\n\r\n        var errorMessage = <any>error;\r\n\r\n        if(errorMessage != null) {\r\n            this.errorMessage = error.error.message;\r\n            console.log(error);\r\n        } \r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!identity\">\r\n    <div class=\"Login\">\r\n        <div class=\"FirstSection d-lg-flex justify-content-lg-around\">\r\n            <div class=\"image\">\r\n                <img src=\"../../../assets/file.jpg\" alt=\"Login\" />\r\n            </div>\r\n            <div class=\"text\">\r\n                <img src=\"../../../assets/logo.png\" alt=\"Logo\" class=\"logo\" />\r\n                <hr width=\"50%\" />\r\n                <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\r\n                    <div class=\"form__body\">\r\n                        <img src=\"../../../assets/svg/email.svg\" alt=\"Email\" />\r\n                        <input \r\n                            type=\"email\"\r\n                            placeholder=\"Dirección de correo electrónico\"\r\n                            class=\"form-control\"\r\n                            required\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            #email=\"ngModel\"\r\n                            [(ngModel)]=\"users.email\"\r\n                        />\r\n                    </div>\r\n                    <span class=\"text-danger FFP\" *ngIf=\"email.errors?.required && email.touched\">El correo electronico es obligatorio.</span>\r\n    \r\n                    <div class=\"form__body\">\r\n                        <img src=\"../../../assets/svg/password.svg\" alt=\"Password\" />\r\n                        <input \r\n                            type=\"password\"\r\n                            placeholder=\"Contraseña\"\r\n                            class=\"form-control\"\r\n                            required\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            #password=\"ngModel\"\r\n                            [(ngModel)]=\"users.password\"\r\n                        />\r\n                    </div>\r\n                    <span class=\"text-danger FFP\" *ngIf=\"password.errors?.required && password.touched\">La contraseña es obligatorio.</span> \r\n    \r\n                    <button \r\n                        type=\"submit\"\r\n                        class=\"btn\"\r\n                        [disabled]=\"!f.valid\"\r\n                    >\r\n                        Iniciar sesión\r\n                    </button>\r\n    \r\n                    <div class=\"alert alert-danger text-center pb-3 col-8 d-block m-auto small-shadow FFP\" *ngIf=\"errorMessage\">\r\n                        <strong>ERROR:</strong> {{errorMessage}}\r\n                     </div>\r\n\r\n                </form>\r\n                <p>¿Aún no tienes cuenta? Registra una cuenta facilmente haciendo clic <a [routerLink]=\"['sign-in']\" routerLinkActive=\"router-link-active\" >aquí</a></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"clearfix\"></div>\r\n\r\n<div *ngIf=\"identity\">\r\n    <app-learning-home></app-learning-home>\r\n</div>","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { Courses } from '../../models/courses_model';\r\n\r\n@Pipe({\r\n    name: 'courseFilter'\r\n})\r\n\r\nexport class CoursesFilterPipe implements PipeTransform {\r\n    transform(courses: Courses[], searchTerm: string): Courses[] {\r\n        if(!courses || !searchTerm) {\r\n            return courses;\r\n        }\r\n\r\n        return courses.filter(courses => courses.course_name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\r\n\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LearningRoutingModule } from './learning-routing.module';\r\nimport { LearningComponent } from './learning.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { AddCourseComponent } from './add-course/add-course.component';\r\nimport { AddContentComponent } from './add-content/add-content.component';\r\nimport { LearningHomeComponent } from './learning-home/learning-home.component';\r\nimport { CoursesFilterPipe } from './learning.filter.pipe';\r\nimport { ModulesLearningComponent } from './modules-learning/modules-learning.component';\r\nimport { ContentLearningComponent } from './content-learning/content-learning.component';\r\nimport { AddModuleComponent } from './add-module/add-module.component';\r\nimport { PdfLearningComponent } from './pdf-learning/pdf-learning.component';\r\nimport { VideosLearningComponent } from './videos-learning/videos-learning.component';\r\nimport { ViewvideoComponent } from './viewvideo/viewvideo.component';\r\nimport { AddVideoComponent } from './add-video/add-video.component';\r\nimport { AddPdfComponent } from './add-pdf/add-pdf.component';\r\nimport { ViewpdfComponent } from './viewpdf/viewpdf.component';\r\nimport { AddQuizComponent } from './add-quiz/add-quiz.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LearningComponent,\r\n    AddCourseComponent,\r\n    AddContentComponent,\r\n    LearningHomeComponent,\r\n    CoursesFilterPipe,\r\n    ModulesLearningComponent,\r\n    ContentLearningComponent,\r\n    AddModuleComponent,\r\n    PdfLearningComponent,\r\n    VideosLearningComponent,\r\n    ViewvideoComponent,\r\n    AddVideoComponent,\r\n    AddPdfComponent,\r\n    ViewpdfComponent,\r\n    AddQuizComponent,\r\n    QuizComponent,\r\n    SigninComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LearningRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule,\r\n  ],\r\n})\r\nexport class LearningModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { CoursesServices } from '../../../services/courses.services';\r\nimport { ModuleServices } from '../../../services/modules.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { Modules } from '../../../models/module_model';\r\nimport { Courses } from '../../../models/courses_model';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modules-learning',\r\n  templateUrl: './modules-learning.component.html',\r\n  styleUrls: ['./modules-learning.component.scss'],\r\n  providers: [ CoursesServices, ModuleServices, UsersServices ]\r\n})\r\nexport class ModulesLearningComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public course: Courses;\r\n  public modules: Modules[];\r\n  public next_page;\r\n  public prev_page;\r\n  public alertMessage;\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private coursesservices: CoursesServices,\r\n    private moduleservices: ModuleServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n    this.next_page = 1;\r\n    this.prev_page = 1;  \r\n    this.course = new Courses('','','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n   });\r\n\r\n   this.getCourses();\r\n\r\n  }\r\n\r\n  getCourses() {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let id = params['id'];\r\n\r\n      this.coursesservices.getCourse(this.token, id).subscribe(\r\n        response => {\r\n          if(!response.course) {\r\n            console.log('Se encontraron problemas en el servidor.');\r\n          } else {\r\n            this.course = response.course;\r\n            this.moduleservices.getModules(response.course._id).subscribe (\r\n              response => {                \r\n                if(!response.modules) {\r\n                  console.log('Se encontraron problemas en el servidor.');\r\n                } else {\r\n                  this.modules = response.modules;\r\n                }\r\n\r\n              },\r\n              error => {\r\n                console.log(error);\r\n              }\r\n            )\r\n\r\n          }\r\n        },  \r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n\r\n    });\r\n  }\r\n\r\n  public confirm;\r\n\r\n  onCancelCourse() {\r\n    this.confirm = null;\r\n    document.querySelector(\".TwoSection\").scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  onDeleteConfirm(id) {\r\n    this.confirm = id;\r\n  }\r\n\r\n  onDeleteCourse(id) {\r\n    this.coursesservices.deleteCourse(this.token, id).subscribe(\r\n      response => {\r\n        if(!response.courseRemoved) {\r\n          alert(\"Se encontraron problemas en el servidor. \");\r\n        } else if(response.courseRemoved) {\r\n          alert(\"El curso se eliminó con éxito.\")\r\n          this.router.navigate(['/learning']);\r\n        } \r\n      }, \r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  public update;\r\n\r\n  onUpdateConfirm(id) {\r\n    this.update = id;\r\n  }\r\n\r\n  onUpdateCancel() {\r\n    this.update = null;\r\n    document.querySelector(\".TwoSection\").scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  onUpdateCourse(id){\r\n      this.coursesservices.updateCourse(this.token, id, this.course).subscribe(\r\n        response => {                          \r\n          if(!response.INFO_COURSE) {\r\n            alert(\"Error en el servidor\");\r\n          } else {\r\n            if(!this.filesToUpload) {\r\n              alert(\"El curso se modificó con éxito, pero no se modificó la imagen.\");\r\n              this.course = response.INFO_COURSE;\r\n              this.router.navigate(['/learning']);\r\n            } else {\r\n              this.makeFileRequest(this.url + '/add-image-course/' + response.INFO_COURSE._id, [], this.filesToUpload),\r\n              (result: any) => {              \r\n                this.course.image = result.image;\r\n                alert(\"El curso se modificó con éxito.\");\r\n                this.alertMessage = 'El curso se modificó con éxito.';\r\n                this.course = response.INFO_COURSE;\r\n                this.router.navigate(['/learning']);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  public filesToUpload: Array<File>;\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.filesToUpload = <Array<File>>fileInput.target.files;    \r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n    \r\n    var token = this.token;\r\n\r\n    return new Promise(function(resolve, reject){\r\n      var formData: any = new FormData();\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      for(var i = 0; i < files.length; i++) {\r\n        formData.append('image', files[i], files[i].name);\r\n      }\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status == 200) {\r\n            resolve(JSON.parse(xhr.response));\r\n          } else {\r\n            reject(xhr.response);\r\n          }\r\n        }\r\n      }\r\n      \r\n      xhr.open('POST', url, true);\r\n      xhr.setRequestHeader('Authorization', token);\r\n      xhr.send(formData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"TwoSection\">\r\n        <h2 data-aos=\"fade-down\">Módulos del curso</h2>\r\n\r\n        <div *ngIf=\"course\">\r\n            <div class=\"actions d-lg-flex justify-content-lg-start\" *ngIf=\"identity.role == 'ROLE_ADMIN'\" data-aos=\"fade-down\">\r\n                <a class=\"btn btn-edit waves-effect waves-ripple\" (click)=\"onUpdateConfirm(course._id)\">\r\n                    <img src=\"../../../../assets/svg/edit.svg\" alt=\"Logo\" />\r\n                    Editar curso\r\n                </a>\r\n                <br class=\"visible-sm\">\r\n                <a class=\"btn btn-delete waves-effect waves-ripple\" (click)=\"onDeleteConfirm(course._id)\" data-aos=\"fade-down\">\r\n                    <img src=\"../../../../assets/svg/trash.svg\" alt=\"Logo\" />\r\n                    Eliminar este curso\r\n                </a>\r\n            </div>\r\n\r\n            <div class=\"secure\" *ngIf=\"confirm == course._id\">\r\n                <p>¿Estas seguro de eliminar este producto?</p>\r\n                <div class=\"buttons d-lg-flex justify-content-lg-around\">\r\n                    <a class=\"btn btn-cancel btn-primary waves-effect waves-ripple\" (click)=\"onCancelCourse()\">\r\n                        No, cancelar esta acción\r\n                    </a>\r\n                    <br class=\"visible-sm\">\r\n                    <a class=\"btn btn-deletes btn-danger waves-effect waves-ripple\" (click)=\"onDeleteCourse(course._id)\">\r\n                        Sí, eliminar definitivamente\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n                                \r\n            <div class=\"secure-update\" *ngIf=\"update == course._id\">\r\n                <p class=\"text-center mt-3\">Modificar curso</p>\r\n                <form (ngSubmit)=\"onUpdateCourse(course._id)\" #f=\"ngForm\" class=\"col-12 col-sm-9 col-md-7 col-lg-5 d-block m-auto\">\r\n                    <p>\r\n                        <input type=\"text\" class=\"form-control\" name=\"course_name\" #course_name=\"ngModel\" [(ngModel)]=\"course.course_name\" id=\"\" value=\"{{course.course_name}}\">\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"text\" class=\"form-control\" name=\"duration\" #duration=\"ngModel\" [(ngModel)]=\"course.duration\" value=\"{{course.duration}}\">\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"text\" class=\"form-control\" name=\"instructor\" #instructor=\"ngModel\" [(ngModel)]=\"course.instructor\" value=\"{{course.instructor}}\">\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"text\" class=\"form-control\" name=\"modules\" #modules=\"ngModel\" [(ngModel)]=\"course.modules\" value=\"{{course.modules}}\">\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"file\" class=\"form-control\" name=\"image\" id=\"\" (change)=\"fileChangeEvent($event)\">\r\n                    </p>\r\n\r\n                    <div class=\"actions mt-3 d-lg-flex justify-content-lg-around\">\r\n                        <button type=\"reset\" class=\"btn-danger btn waves-effect waves-ripple\" (click)=\"onUpdateCancel()\">Cancelar acción</button>\r\n                        <button type=\"submit\" class=\"btn-primary btn waves-effect waves-ripple\">Actualizar curso</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <hr>\r\n    </div>\r\n\r\n    <div class=\"ThirdSection\" *ngIf=\"modules\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-around\">\r\n                <a \r\n                    [routerLink]=\"['content/', modules._id]\" \r\n                    routerLinkActive=\"router-link-active\" \r\n                    *ngFor=\"let modules of modules\" \r\n                    class=\"p-4 mt-5 rounded text-none\"\r\n                    data-aos=\"fade-down\"\r\n                >\r\n                    <div class=\"image\">\r\n                        <img src=\"{{ url + '/get-image-product/' + modules.image}}\" alt=\"{{modules.image}}\">\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"text\">\r\n                        <div class=\"name_module\">\r\n                            <h4 class=\"name\"> {{modules.module_name}} </h4>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"duration_module\">\r\n                            <img src=\"../../../../assets/svg/time.svg\" alt=\"Icon\" width=\"18px\">\r\n                            <h4> {{modules.module_duration}} </h4>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"clearfix\"></div>\r\n\r\n</div>\r\n\r\n\r\n<div *ngIf=\"course\">\r\n    <div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n        <a [routerLink]=\"['add-module/', course._id]\" routerLinkActive=\"router-link-active\"class=\"ThirdSection btn-adds\">\r\n            <div>\r\n                <img src=\"../../../../assets/svg/addE.svg\" alt=\"adds\">\r\n            </div>\r\n        </a>    \r\n    </div>    \r\n</div>\r\n\r\n<div class=\"clearfix\"></div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { PdfsServices } from '../../../services/pdfs.services';\r\n\r\nimport { Content } from '../../../models/content_model';\r\nimport { PDFS } from '../../../models/pdfs_model';\r\n\r\n@Component({\r\n  selector: 'app-pdf-learning',\r\n  templateUrl: './pdf-learning.component.html',\r\n  styleUrls: ['./pdf-learning.component.scss'],\r\n  providers: [ UsersServices, ContentServices, PdfsServices]\r\n})\r\nexport class PdfLearningComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public content: Content;\r\n  public pdf: PDFS[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private contentservices: ContentServices,\r\n    private pdfsservices: PdfsServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.getPDFS();\r\n    AOS.init({\r\n      once: true\r\n    })\r\n  }\r\n\r\n  getPDFS() {\r\n    this.route.params.forEach((params: Params) => {\r\n        \r\n        let id = params ['ids'];\r\n\r\n        this.contentservices.getContent(this.token, id).subscribe (\r\n          response => {\r\n            if(!response.content) {\r\n              console.log('Se encontraron problemas en el servidor.');\r\n            } else {\r\n              this.content = response.content;\r\n              this.pdfsservices.getFiles(this.token, response.content._id).subscribe(\r\n                response => {\r\n                  if(!response.pdfs) {\r\n                    console.log('Se encontraron problemas en el servidor.');\r\n                  } else {\r\n                    this.pdf = response.pdfs;\r\n                    console.log(this.pdf);\r\n                  }\r\n                }, \r\n                error => {\r\n                  console.log(error);\r\n                }\r\n              )\r\n\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"TwoSection\">\r\n        <h2>PDF's del curso</h2>\r\n        <hr>\r\n    </div>\r\n    <div class=\"FirstSection\" *ngIf=\"pdf\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-around\">\r\n                <a\r\n                    [routerLink]=\"['view/' + pdf._id]\" routerLinkActive=\"router-link-active\" \r\n                    *ngFor=\"let pdf of pdf\"\r\n                    class=\"p-4 mt-5 rounded text-none\"\r\n                >\r\n                    <h2> {{pdf.number}} </h2>\r\n                    <hr>\r\n                    <h3> {{pdf.namePDF}} </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"content\">\r\n        <div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n            <a [routerLink]=\"['add-pdf/', content._id]\" routerLinkActive=\"router-link-active\"class=\"ThirdSection btn-adds\">\r\n                <div>\r\n                    <img src=\"../../../../assets/svg/addE.svg\" alt=\"adds\">\r\n                </div>\r\n            </a>    \r\n        </div>    \r\n    </div>\r\n\r\n    <h2 class=\"rea\">¿No entendiste en su totalidad algún tema o practica? Consulta este <strong>REA</strong> para apoyarte dando <a href=\"https://www.pequerecetas.com/\" target=\"_blank\">clic aquí</a></h2>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { QuizServices } from '../../../services/quiz.services';\r\n\r\nimport { Content } from '../../../models/content_model';\r\nimport { Quiz } from '../../../models/quiz_model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.scss'],\r\n  providers: [ UsersServices, ContentServices, QuizServices ]\r\n})\r\nexport class QuizComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public content: Content;\r\n  public quiz: Quiz[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private contentservices: ContentServices,\r\n    private quizservices: QuizServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuizzes();\r\n    AOS.init({\r\n      once: true\r\n    })\r\n  }\r\n\r\n  getQuizzes() {\r\n    this.route.params.forEach((params: Params) => {\r\n      \r\n      let id = params ['ids'];\r\n\r\n      this.contentservices.getContent(this.token, id).subscribe(\r\n        response => {\r\n          if(!response.content) {\r\n            console.log('Se encontraron problemas en el servidor.');\r\n          } else {\r\n            this.content = response.content;\r\n            this.quizservices.getQuizzes(this.token, response.content._id).subscribe(\r\n              response => {\r\n                if(!response.quizzes) {\r\n                  console.log();\r\n                } else {\r\n                  this.quiz = response.quizzes;\r\n                  console.log(this.quiz);\r\n                  \r\n                }\r\n              },\r\n              error => {\r\n                console.log(error);\r\n              }\r\n            )\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"TwoSection\">\r\n        <h2>Examenes del curso</h2>\r\n        <hr>\r\n    </div>\r\n    <div class=\"FirstSection\" *ngIf=\"quiz\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-around\">\r\n                <a\r\n                    [href]=\"quiz.link\"\r\n                    target=\"_blank\"\r\n                    *ngFor=\"let quiz of quiz\"\r\n                    class=\"p-4 mt-5 rounded text-none\"\r\n                >\r\n                    <h2> {{quiz.number}} </h2>\r\n                    <hr>\r\n                    <h3> {{quiz.nameQuiz}} </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"content\">\r\n        <div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n            <a [routerLink]=\"['add-quiz/', content._id]\" routerLinkActive=\"router-link-active\"class=\"ThirdSection btn-adds\">\r\n                <div>\r\n                    <img src=\"../../../../assets/svg/addE.svg\" alt=\"adds\">\r\n                </div>\r\n            </a>    \r\n        </div>    \r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UsersServices } from \"../../../services/users.services\";\r\nimport { Users } from \"../../../models/users_model\";\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n  providers: [ UsersServices ]\r\n})\r\nexport class SigninComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public users: Users;\r\n  public alertMessage: string;\r\n  public termsAccepted: boolean = false; // Nueva propiedad para controlar los términos\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private usersServices: UsersServices) {\r\n    this.url = GLOBAL.url;\r\n    this.users = new Users ('','','','','','','','','','');\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public onSubmit(f: NgForm) {\r\n    if (!this.termsAccepted) {  // Verificar si los términos fueron aceptados\r\n      this.alertMessage = 'Por favor, acepta los términos y condiciones.';\r\n      return;\r\n    }\r\n\r\n    this.usersServices.newAccount(this.users).subscribe(\r\n      response => {\r\n        if (!response.INFO_ACCOUNT) {\r\n          this.alertMessage = 'Se encontraron problemas en el servidor.';\r\n        } else {\r\n          this.alertMessage = 'Cuenta creada con éxito, ahora ya puedes iniciar sesión.';\r\n          this.users = response.INFO_ACCOUNT;\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h1>Crear una nueva cuenta</h1>\r\n\r\n<form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"text col-5 d-block m-auto\">\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/nameSG.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Tú nombre\" #name=\"ngModel\" required [(ngModel)]=\"users.name\" [class.is-invalid]=\"name.touched && name.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"name.errors?.required && name.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/FSSG.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"fathersurname\" id=\"fathersurname\" placeholder=\"Tú apellido paterno\" #fathersurname=\"ngModel\" required [(ngModel)]=\"users.fathersurname\" [class.is-invalid]=\"fathersurname.touched && fathersurname.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"fathersurname.errors?.required && fathersurname.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/FSSG.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"mothersurname\" id=\"mothersurname\" placeholder=\"Tú apellido materno\" #mothersurname=\"ngModel\" required [(ngModel)]=\"users.mothersurname\" [class.is-invalid]=\"mothersurname.touched && mothersurname.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"mothersurname.errors?.required && mothersurname.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/emailSG.svg\" alt=\"Icon\">\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Dirección electrónica\" #email=\"ngModel\" required [(ngModel)]=\"users.email\" [class.is-invalid]=\"email.touched && email.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"email.errors?.required && email.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/passwordSG.svg\" alt=\"Icon\">\r\n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Contraseña\" #password=\"ngModel\" required [(ngModel)]=\"users.password\" [class.is-invalid]=\"password.touched && password.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"password.errors?.required && password.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/mastercard_credit_card.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"creditcard\" id=\"creditcard\" placeholder=\"Tarjeta de credito\" #creditcard=\"ngModel\" required [(ngModel)]=\"users.creditcard\" [class.is-invalid]=\"creditcard.touched && creditcard.invalid\" maxlength=\"19\">\r\n                    <span class=\"text-danger\" *ngIf=\"creditcard.errors?.required && creditcard.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/nipSG.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"nip\" id=\"nip\" placeholder=\"NIP\" #nip=\"ngModel\" required [(ngModel)]=\"users.nip\" [class.is-invalid]=\"nip.touched && nip.invalid\" maxlength=\"3\">\r\n                    <span class=\"text-danger\" *ngIf=\"nip.errors?.required && nip.touched\">!</span>\r\n                </p>\r\n                <p class=\"col-12\">\r\n                    <img src=\"../../../../assets/svg/dateSG.svg\" alt=\"Icon\">\r\n                    <input type=\"text\" name=\"expiration_date\" id=\"expiration_date\" placeholder=\"2020-11-2\" #expiration_date=\"ngModel\" required [(ngModel)]=\"users.expiration_date\" [class.is-invalid]=\"expiration_date.touched && expiration_date.invalid\">\r\n                    <span class=\"text-danger\" *ngIf=\"expiration_date.errors?.required && expiration_date.touched\">!</span>\r\n                </p>\r\n                \r\n                <!-- Checkbox para aceptación de los términos y condiciones sin ngModel -->\r\n                <p class=\"col-12\">\r\n                    <input type=\"checkbox\" id=\"terms\" name=\"terms\" (change)=\"termsAccepted = $event.target.checked\">\r\n                    <label for=\"terms\">\r\n                        He leído y acepto los <a href=\"aboutus\" target=\"_blank\">términos y condiciones</a>.\r\n                    </label>\r\n                    <span class=\"text-danger\" *ngIf=\"!termsAccepted && f.submitted\">¡Debes aceptar los términos y condiciones!</span>\r\n                </p>\r\n\r\n                <!-- Botón de crear cuenta deshabilitado si la casilla no está marcada -->\r\n                <button type=\"submit\" class=\"btn btn-response d-block waves-effect waves-ripple\" [disabled]=\"!f.valid || !termsAccepted\">\r\n                    Crear cuenta\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"response\">\r\n    <h3 class=\"text-center\">Respuesta del servidor</h3>\r\n    <div *ngIf=\"alertMessage\">\r\n        <div class=\"alert alert-primary w-75 d-block m-auto text-center \">\r\n            {{alertMessage}}\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { VideosServices } from \"../../../services/video.services\";\r\n\r\nimport { Videos } from \"../../../models/videos_model\";\r\nimport { Content } from '../../../models/content_model';\r\n\r\n@Component({\r\n  selector: 'app-videos-learning',\r\n  templateUrl: './videos-learning.component.html',\r\n  styleUrls: ['./videos-learning.component.scss'],\r\n  providers: [ UsersServices, ContentServices, VideosServices]\r\n})\r\nexport class VideosLearningComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public content: Content;\r\n  public video: Videos[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private contentservices: ContentServices,\r\n    private videosservices: VideosServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getVideos();\r\n  }\r\n\r\n  getVideos() {\r\n    this.route.params.forEach((params: Params) => {\r\n        \r\n        let id = params ['ids'];\r\n        console.log(id);\r\n        \r\n\r\n        this.contentservices.getContent(this.token, id).subscribe (\r\n          response => {\r\n            if(!response.content) {\r\n              console.log('Se encontraron problemas en el servidor.');\r\n            } else {\r\n              this.content = response.content;\r\n              this.videosservices.getVideos(this.token, response.content._id).subscribe(\r\n                response => {\r\n                  if(!response.videos) {\r\n                    console.log('Se encontraron problemas en el servidor.');\r\n                  } else {\r\n                    this.video = response.videos;\r\n                    console.log(this.video);\r\n                  }\r\n                }, \r\n                error => {\r\n                  console.log(error);\r\n                }\r\n              )\r\n\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"TwoSection\">\r\n        <h2 data-aos=\"fade-down\">Videos del curso</h2>\r\n        <hr>\r\n    </div>\r\n    <div class=\"FirstSection\" *ngIf=\"video\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-around\">\r\n                <a\r\n                [routerLink]=\"['view/' + video._id]\" \r\n                routerLinkActive=\"router-link-active\" \r\n                *ngFor=\"let video of video\"\r\n                class=\"p-4 mt-5 rounded text-none\"\r\n                data-aos=\"fade-down\"\r\n                >\r\n                    <h2> {{video.number}} </h2>\r\n                    <hr>\r\n                    <h3> {{video.nameVideo}} </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"content\">\r\n        <div *ngIf=\"identity.role == 'ROLE_ADMIN'\">\r\n            <a [routerLink]=\"['add-video/', content._id]\" routerLinkActive=\"router-link-active\"class=\"ThirdSection btn-adds\">\r\n                <div>\r\n                    <img src=\"../../../../assets/svg/addE.svg\" alt=\"adds\">\r\n                </div>\r\n            </a>    \r\n        </div>    \r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { PdfsServices } from \"../../../services/pdfs.services\";\r\n\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { PDFS } from \"../../../models/pdfs_model\";\r\nimport { Content } from '../../../models/content_model';\r\n\r\n@Component({\r\n  selector: 'app-viewpdf',\r\n  templateUrl: './viewpdf.component.html',\r\n  styleUrls: ['./viewpdf.component.scss'],\r\n  providers: [ UsersServices, ContentServices, PdfsServices]\r\n})\r\nexport class ViewpdfComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public content: Content;\r\n  public pdfs: PDFS[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private contentservices: ContentServices,\r\n    private pdfsservices: PdfsServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sanitizer: DomSanitizer\r\n  ) { \r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    AOS.init({\r\n      once: true\r\n    });\r\n    this.downloadPDF();\r\n  }\r\n\r\n  downloadPDF() {\r\n    this.route.params.forEach((params: Params) => {\r\n      let id = params ['file'];\r\n      this.pdfsservices.getFile(id).subscribe(\r\n        response => {\r\n          this.pdfs = [response.pdf];          \r\n          console.log(this.pdfs);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection\" *ngIf=\"pdfs\">\r\n        <div *ngFor=\"let pdf of pdfs\" class=\"container-pdf p-5 mt-5\">\r\n            <a \r\n                [href]=\"url + '/get-view-pdf/' + pdf.files\"\r\n                download=\"pdf.files\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                class=\"text-center text-none\"\r\n            >\r\n                <img src=\"../../../../assets/svg/download.svg\" alt=\"Icon\">\r\n                Descargar archivo\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as AOS from '../.././../../../node_modules/aos/dist/aos.js';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { GLOBAL } from '../../../services/GLOBAL';\r\nimport { ContentServices } from '../../../services/content.services';\r\nimport { UsersServices } from '../../../services/users.services';\r\nimport { VideosServices } from \"../../../services/video.services\";\r\n\r\nimport { Videos } from \"../../../models/videos_model\";\r\nimport { Content } from '../../../models/content_model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-viewvideo',\r\n  templateUrl: './viewvideo.component.html',\r\n  styleUrls: ['./viewvideo.component.scss'],\r\n  providers: [ UsersServices, ContentServices, VideosServices]\r\n})\r\nexport class ViewvideoComponent implements OnInit {\r\n\r\n  public url: string;\r\n  public identity;\r\n  public token;\r\n  public content: Content;\r\n  public video: Videos[];\r\n\r\n  constructor(\r\n    private usersservices: UsersServices,\r\n    private contentservices: ContentServices,\r\n    private videosservices: VideosServices,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.url = GLOBAL.url;\r\n    this.identity = this.usersservices.getIdentity();\r\n    this.token = this.usersservices.getToken();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    AOS.init({\r\n      once: true // \"true\" --> Para desactivar animaciones repetidas al hacer scroll.\r\n    //once: false // \"false\" --> Animaciones repetidas al hacer scroll.\r\n    });\r\n\r\n    this.getFile();\r\n  }\r\n\r\n  getFile() {\r\n    this.route.params.forEach((params: Params) => {\r\n      let id = params ['file'];\r\n      \r\n      this.videosservices.getVideoAlone(this.token, id).subscribe(\r\n        response => {\r\n          this.video = [response.video];\r\n          console.log(this.video);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"identity\">\r\n    <app-navbar-learning></app-navbar-learning>\r\n    <div class=\"FirstSection\" *ngIf=\"video\">\r\n        <div *ngFor=\"let video of video\">\r\n            <h2> <span class=\"number\">{{video.number}}</span> {{video.nameVideo}} </h2>\r\n            <hr width=\"65%\">\r\n            <video controls controlslist=\"nodownload\" preload=\"metadata\" class=\"rounded\">\r\n                <source src=\"{{url + '/get-view-video/' + video.files}}\">\r\n            </video>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!identity\">\r\n    <div class=\"alert alert-danger w-50 d-block m-auto text-center\">\r\n        <span class=\"mt-5\">You must log in to view the content of this platform.</span>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { Content } from '../models/content_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ContentServices {\r\n    \r\n    public url: string;\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n\r\n    addNewContent(token, content:Content):Observable<any> {\r\n\r\n        let json = JSON.stringify(content);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-content', params, { headers: headers});\r\n\r\n    }\r\n\r\n    getContent(token, id: string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-content/' + id, {headers: headers});\r\n\r\n    }\r\n\r\n    getContents(moduleId = null):Observable<any> {\r\n        \r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json'\r\n        });        \r\n\r\n        return this.http.get(this.url + '/get-contents/' + moduleId, {headers: headers});\r\n\r\n    }\r\n\r\n    updateContent(token, id:string, content:Content):Observable<any> {\r\n        let params = JSON.stringify(content);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.put(this.url + '/update-content/' + id, params, {headers: headers});\r\n\r\n    }\r\n\r\n    deleteContent(token, id:string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.delete(this.url + '/delete-content/' + id, {headers: headers});\r\n\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { Courses } from '../models/courses_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CoursesServices {\r\n    \r\n    public url: string;\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n\r\n    addNewCourse(token, courses:Courses):Observable<any> {\r\n        \r\n        let json = JSON.stringify(courses);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-course', params, {headers: headers});\r\n\r\n    }\r\n\r\n    getCourse(token, id:string):Observable<any> {\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-course/' + id, {headers: headers});\r\n    }    \r\n\r\n    getCourses(page):Observable<any> {\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json'\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-courses/' + page, {headers: headers});\r\n    }\r\n\r\n    updateCourse(token, id:string, course:Courses):Observable<any> {\r\n        let params = JSON.stringify(course);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n        \r\n        return this.http.put(this.url + '/update-course/' + id, params, {headers: headers});\r\n\r\n    }\r\n    \r\n    deleteCourse(token, id:string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.delete(this.url + '/delete-course/' + id, {headers: headers});\r\n\r\n        \r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { Modules } from '../models/module_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ModuleServices {\r\n    \r\n    public url: string;\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    addNewModule(token, modules:Modules):Observable<any> {\r\n        let json = JSON.stringify(modules);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-module', params, { headers: headers});\r\n\r\n    }\r\n\r\n    getModule(token, id: string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-module/' + id, {headers: headers});\r\n\r\n    }\r\n\r\n    getModules(courseId = null):Observable<any> {\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json'\r\n        });                \r\n\r\n        return this.http.get(this.url + '/get-modules/' + courseId, {headers: headers});\r\n\r\n    }\r\n\r\n    updateModule(token, id: string, modules:Modules):Observable<any> {\r\n        let params = JSON.stringify(modules);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.put(this.url + '/update-module/' + id, params, {headers: headers});\r\n\r\n    }\r\n\r\n    deleteModule(token, id:string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.delete(this.url + '/delete-module/' + id, {headers: headers});\r\n\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { PDFS } from '../models/pdfs_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PdfsServices {\r\n\r\n    public url: string;\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    addNewFile(token, pdfs:PDFS):Observable<any> {\r\n\r\n        let json = JSON.stringify(pdfs);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-pdf', params, {headers: headers});\r\n\r\n    }\r\n\r\n    getFile(pdfFile: null):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-pdf/' + pdfFile, {headers: headers});\r\n    }\r\n\r\n    getAloneFile(pdfFile: null):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-view-pdf/' + pdfFile, {headers: headers});\r\n    }\r\n\r\n    getFiles(token, contentId = null):Observable<any> {\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });              \r\n\r\n        return this.http.get(this.url + '/get-pdfs/' + contentId, {headers: headers});\r\n\r\n    }\r\n\r\n    updateFiles(token, id: string, pdfs:PDFS):Observable<any> {\r\n        let params = JSON.stringify(pdfs);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.put(this.url + '/update-pdf/' + id, params, {headers: headers});\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { Quiz } from '../models/quiz_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class QuizServices {\r\n    \r\n    public url: string\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    addNewQuiz(token, quiz:Quiz):Observable<any> {\r\n        let json = JSON.stringify(quiz);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-quiz', params, {headers: headers});\r\n\r\n    }\r\n\r\n    getQuizzes(token, contentId = null):Observable<any> {\r\n        let headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });              \r\n\r\n        return this.http.get(this.url + '/get-quizzes/' + contentId, {headers: headers});\r\n    }\r\n\r\n    updateQuiz(token, id:string, quiz:Quiz):Observable<any> {\r\n        let params = JSON.stringify(quiz);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.put(this.url + '/update-quiz/' + id, params, {headers: headers});\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http ,Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs-compat/Observable\";\r\n\r\nimport { Videos } from '../models/videos_model';\r\nimport { GLOBAL } from './GLOBAL';\r\n\r\n@Injectable ({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class VideosServices {\r\n\r\n    public url: string;\r\n\r\n    constructor(private http:HttpClient) {\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    addNewVideo(token, videos:Videos):Observable<any> {\r\n        let json = JSON.stringify(videos);\r\n        let params = json;\r\n\r\n        const headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.post(this.url + '/add-new-video', params, {headers: headers});\r\n\r\n    }\r\n\r\n    getVideo(token, id:string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-video/' + id, {headers: headers});\r\n    }\r\n\r\n    getVideos(token, contentId = null):Observable<any> {\r\n        let headers = new HttpHeaders ({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });              \r\n\r\n        return this.http.get(this.url + '/get-videos/' + contentId, {headers: headers});\r\n\r\n    }\r\n\r\n    updateVideos(token, id:string, videos:Videos):Observable<any> {\r\n        let params = JSON.stringify(videos);\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.put(this.url + '/update-video/' + id, params, {headers: headers});\r\n    }\r\n\r\n    getFiles(videoFile: null):Observable<any> {\r\n\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-view-video/' + videoFile, {headers: headers});\r\n    }\r\n\r\n    getVideoAlone(token, id: string):Observable<any> {\r\n        let headers = new HttpHeaders({\r\n            'Content-Type' : 'application/json',\r\n            'Authorization': token\r\n        });\r\n\r\n        return this.http.get(this.url + '/get-video/' + id, {headers: headers});\r\n\r\n    }\r\n\r\n}"]}